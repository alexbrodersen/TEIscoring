install.packages("devtools")

install.packages("roxygen2")
library(roxygen2)

create("TEIscoring")

## Dichotomous
roxygen2
DichoScoring <- function(correctCheckNum,keyNum,incorrectCheckNum){
    if(correctCheckNum == keyNum & incorrectCheckNum == 0){
        dichotomous <- 1
    } else {
        dichotomous <- 0
    } 
    return(dichotomous)
}
  
## Morgan
Morgan <- function(correctCheckNum,keyNum,incorrectCheckNum,distractorNum){
    morgan <- correctCheckNum/keyNum - incorrectCheckNum/distractorNum
    return(morgan)
}

## Ripkey
Ripkey <- function(keyNum,correctCheckNum,incorrectCheckNum){
    if(keyNum >= correctCheckNum + incorrectCheckNum){
        ripkey <- correctCheckNum/keyNum
    } else { 
        ripkey <- 0
    }
    return(ripkey)
}

## Balanced
 Balanced <- function(keyNum, correctCheckNum, incorrectCheckNum,distractorNum){
   if(keyNum >= correctCheckNum	+ incorrectCheckNum){
       balanced <- correctCheckNum/keyNum
   } else{
       balanced <- correctCheckNum/keyNum - (correctCheckNum + incorrectCheckNum -keyNum)/distractorNum;
   }
   return(balanced)
 }

## TrueFalse
TrueFalse <- function(keyNum, correctCheckNum, incorrectCheckNum,distractorNum){
    TF <- (correctCheckNum + (distractorNum -incorrectCheckNum))/(keyNum + distractorNum)
    return(TF)
}

## TrueFalseP
TrueFalseP <- function(keyNum, correctCheckNum, incorrectCheckNum,distractorNum){
    TFP <- ((correctCheckNum + (distractorNum -incorrectCheckNum)) -
            ((keyNum-correctCheckNum)+incorrectCheckNum))/(keyNum + distractorNum)
    return(TFP)
}

## Subset
Subset <- function(keyNum, correctCheckNum, incorrectCheckNum,distractorNum){
    if(incorrectCheckNum > 0){
        subset <- 0
    } else{
        subset <- correctCheckNum/keyNum
    }
    return(subset)
}

## plusMinus
plusMinus <- function(keyNum, correctCheckNum, incorrectCheckNum,distractorNum){
    plusMinus = (correctCheckNum - incorrectCheckNum)/(keyNum + distractorNum)
    return(plusMinus)
}

## MCC
MCC <- function(keyNum, correctCheckNum, incorrectCheckNum,distractorNum){
    TP <- correctCheckNum
    FP <- incorrectCheckNum
    FN <- keyNum - correctCheckNum
    TN <- distractorNum -incorrectCheckNum
    nom <- TP * TN - FP * FN
    denom <- sqrt((TP + FP) * (TP + FN) * (TN + FP) * (TN + FN))
    mcc <- nom/denom
    return(mcc)
}
